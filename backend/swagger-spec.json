{
  "openapi": "3.0.0",
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User login",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/LoginResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getMe",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User login",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/AuthUserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Auth"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get all users",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/UserResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create user",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/stats": {
      "get": {
        "operationId": "UserController_getStats",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get user statistics",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserStatsResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Users"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UserResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Users"
        ]
      }
    },
    "/claim": {
      "post": {
        "operationId": "ClaimController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateClaimDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      },
      "get": {
        "operationId": "ClaimController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 5,
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filter by claim type (category)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search keyword for claim_type or description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "id",
              "type": "string",
              "enum": [
                "id",
                "claim_type",
                "amount",
                "status",
                "submitted_date"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all claims with signed URLs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/ClaimResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      }
    },
    "/claim/{id}": {
      "get": {
        "operationId": "ClaimController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get claim with signed URLs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ClaimResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      },
      "patch": {
        "operationId": "ClaimController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClaimDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update claim",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ClaimResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      },
      "delete": {
        "operationId": "ClaimController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove claim",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ClaimResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      }
    },
    "/claim/{id}/{status}": {
      "patch": {
        "operationId": "ClaimController_updateClaimStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "path",
            "description": "New status to set for the claim",
            "schema": {
              "$ref": "#/components/schemas/ClaimStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update claim",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ClaimResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      }
    },
    "/claim/{id}/file": {
      "delete": {
        "operationId": "ClaimController_removeFile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove claim document",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/ClaimResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Claim"
        ]
      }
    },
    "/policy": {
      "post": {
        "operationId": "PolicyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreatePolicyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "get": {
        "operationId": "PolicyController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 5,
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filter by policy category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search keyword for name or description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "id",
              "type": "string",
              "enum": [
                "id",
                "name",
                "rating",
                "premium",
                "popularity"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all policies",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/PolicyResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/{id}": {
      "get": {
        "operationId": "PolicyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get policy with signed URLs",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PolicyResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "patch": {
        "operationId": "PolicyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePolicyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update policy",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PolicyResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      },
      "delete": {
        "operationId": "PolicyController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove policy",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/PolicyResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/dashboard/policyholder/{userId}/summary": {
      "get": {
        "operationId": "PolicyController_getSummary",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/policy/browse/categories": {
      "get": {
        "operationId": "PolicyController_getCategoryCounts",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          },
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Policy"
        ]
      }
    },
    "/coverage": {
      "post": {
        "operationId": "CoverageController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCoverageDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      },
      "get": {
        "operationId": "CoverageController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 5,
              "type": "number"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "description": "Filter by policy category",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "description": "Search keyword for policy name or description",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "limitExceeded",
                "expired",
                "suspended"
              ]
            }
          },
          {
            "name": "sortBy",
            "required": false,
            "in": "query",
            "schema": {
              "default": "id",
              "type": "string",
              "enum": [
                "id",
                "start_date",
                "utilization_rate"
              ]
            }
          },
          {
            "name": "sortOrder",
            "required": false,
            "in": "query",
            "schema": {
              "default": "asc",
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get all coverages",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/CoverageResponseDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      }
    },
    "/coverage/{id}": {
      "get": {
        "operationId": "CoverageController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get coverage",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CommonResponseDto"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/CoverageResponseDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      },
      "patch": {
        "operationId": "CoverageController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCoverageDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      },
      "delete": {
        "operationId": "CoverageController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      }
    },
    "/coverage/policyholder/summary": {
      "get": {
        "operationId": "CoverageController_getPolicyholderSummary",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Coverage"
        ]
      }
    },
    "/claim-type-extractor": {
      "post": {
        "operationId": "PdfClaimExtractorController_extract",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/ExtractClaimDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "PdfClaimExtractor"
        ]
      }
    },
    "/reviews/policy/{id}/review": {
      "post": {
        "operationId": "ReviewsController_leaveReview",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateReviewDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "security": [
          {
            "supabase-auth": []
          }
        ],
        "tags": [
          "Reviews"
        ]
      }
    }
  },
  "info": {
    "title": "My API",
    "description": "The backend API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "supabase-auth": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "description": "Enter your Supabase access token"
      }
    },
    "schemas": {
      "CommonResponseDto": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "count": {
            "type": "number"
          }
        },
        "required": [
          "statusCode",
          "message"
        ]
      },
      "AuthUserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "email_verified": {
            "type": "boolean"
          },
          "username": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "lastSignInAt": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "email_verified",
          "username",
          "role",
          "lastSignInAt",
          "provider"
        ]
      },
      "LoginResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/AuthUserResponseDto"
          }
        },
        "required": [
          "user"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@example.com",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "secret123",
            "description": "Password for the user"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CompanyDetailsDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "ABC Company"
          },
          "address": {
            "type": "string",
            "example": "123 Main St, New York, USA"
          },
          "contact_no": {
            "type": "object",
            "example": "+1 555-1234"
          },
          "website": {
            "type": "object",
            "example": "www.abccompany.com"
          },
          "license_number": {
            "type": "string",
            "example": "LIC-00012345"
          },
          "years_in_business": {
            "type": "string",
            "example": "0-1 years",
            "enum": [
              "0-1 years",
              "2-5 years",
              "6-10 years",
              "11-20 years",
              "20+ years"
            ]
          },
          "employees_number": {
            "type": "string",
            "example": "0-10",
            "enum": [
              "0-10",
              "11-50",
              "51-200",
              "201-500",
              "500+"
            ]
          },
          "created_at": {
            "type": "string",
            "example": "2024-01-01T00:00:00Z"
          }
        }
      },
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "alex.johnson@example.com",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "example": "StrongPass123!",
            "description": "Password (must include upper, lower, digit)"
          },
          "confirmPassword": {
            "type": "string",
            "example": "StrongPass123!",
            "description": "Confirm password (must match password)"
          },
          "firstName": {
            "type": "string",
            "example": "Alex"
          },
          "lastName": {
            "type": "string",
            "example": "Johnson"
          },
          "role": {
            "type": "string",
            "example": "policyholder",
            "enum": [
              "policyholder",
              "insurance_admin",
              "system_admin"
            ]
          },
          "phone": {
            "type": "string",
            "example": "+60123456789"
          },
          "bio": {
            "type": "string",
            "example": "I am a policyholder"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDetailsDto"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1990-06-15"
          },
          "occupation": {
            "type": "string",
            "example": "Engineer"
          },
          "address": {
            "type": "string",
            "example": "123 Main St"
          }
        },
        "required": [
          "email",
          "password",
          "confirmPassword",
          "role"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "policyholder",
              "insurance_admin",
              "system_admin"
            ]
          },
          "phone": {
            "type": "object",
            "nullable": true
          },
          "bio": {
            "type": "object",
            "nullable": true
          },
          "status": {
            "type": "string",
            "example": "active"
          },
          "lastLogin": {
            "type": "object"
          },
          "joinedAt": {
            "type": "object"
          },
          "details": {
            "type": "object"
          }
        },
        "required": [
          "user_id",
          "email",
          "name",
          "role",
          "status"
        ]
      },
      "UserStatsResponseDto": {
        "type": "object",
        "properties": {
          "totalUsers": {
            "type": "number"
          },
          "activeUsers": {
            "type": "number"
          },
          "policyholders": {
            "type": "number"
          },
          "insuranceAdmins": {
            "type": "number"
          }
        },
        "required": [
          "totalUsers",
          "activeUsers",
          "policyholders",
          "insuranceAdmins"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "alex.johnson@example.com"
          },
          "password": {
            "type": "string",
            "example": "StrongPass123!"
          },
          "role": {
            "type": "string",
            "example": "policyholder",
            "enum": [
              "policyholder",
              "insurance_admin",
              "system_admin"
            ]
          },
          "phone": {
            "type": "string",
            "example": "1234567890"
          },
          "bio": {
            "type": "string",
            "example": "I am a policyholder"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDetailsDto"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1985-06-15"
          },
          "occupation": {
            "type": "string",
            "example": "Software Engineer"
          },
          "address": {
            "type": "string",
            "example": "123 Main St"
          }
        },
        "required": [
          "email",
          "password",
          "role"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "alex.johnson@example.com"
          },
          "password": {
            "type": "string",
            "example": "StrongPass123!"
          },
          "role": {
            "type": "string",
            "example": "policyholder",
            "enum": [
              "policyholder",
              "insurance_admin",
              "system_admin"
            ]
          },
          "phone": {
            "type": "string",
            "example": "1234567890"
          },
          "bio": {
            "type": "string",
            "example": "I am a policyholder"
          },
          "company": {
            "$ref": "#/components/schemas/CompanyDetailsDto"
          },
          "dateOfBirth": {
            "type": "string",
            "example": "1985-06-15"
          },
          "occupation": {
            "type": "string",
            "example": "Software Engineer"
          },
          "address": {
            "type": "string",
            "example": "123 Main St"
          },
          "status": {
            "type": "string",
            "example": "active",
            "enum": [
              "active",
              "deactivated"
            ]
          }
        }
      },
      "CreateClaimDto": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the policy associated with the claim"
          },
          "claim_type": {
            "type": "string",
            "example": "accident",
            "description": "Type of the claim"
          },
          "priority": {
            "type": "string",
            "example": "medium",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "description": "Priority of the claim"
          },
          "amount": {
            "type": "number",
            "example": 1000,
            "description": "Amount claimed"
          },
          "description": {
            "type": "string",
            "example": "Accident on highway, car damaged.",
            "description": "Description of the claim"
          },
          "documents": {
            "description": "Documents to upload",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": [
          "policy_id",
          "claim_type",
          "priority",
          "amount"
        ]
      },
      "ClaimDocumentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "claim_id": {
            "type": "number"
          },
          "signedUrl": {
            "type": "string",
            "description": "Signed Supabase URL for accessing this document",
            "example": "https://qydplatgoxvtomjhkqrx.supabase.co/storage/v1/object/sign/..."
          }
        },
        "required": [
          "id",
          "name",
          "claim_id",
          "signedUrl"
        ]
      },
      "ClaimResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "claim_type": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "object"
          },
          "submitted_date": {
            "type": "string"
          },
          "claim_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimDocumentResponseDto"
            }
          }
        },
        "required": [
          "id",
          "claim_type",
          "amount",
          "status",
          "description",
          "submitted_date",
          "claim_documents"
        ]
      },
      "UpdateClaimDto": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the policy associated with the claim"
          },
          "claim_type": {
            "type": "string",
            "example": "accident",
            "description": "Type of the claim"
          },
          "priority": {
            "type": "string",
            "example": "medium",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "description": "Priority of the claim"
          },
          "amount": {
            "type": "number",
            "example": 1000,
            "description": "Amount claimed"
          },
          "description": {
            "type": "string",
            "example": "Accident on highway, car damaged.",
            "description": "Description of the claim"
          },
          "documents": {
            "description": "Documents to upload",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          },
          "id": {
            "type": "number",
            "example": 1,
            "description": "ID of the claim to update"
          },
          "status": {
            "type": "string",
            "example": "pending",
            "description": "Status of the claim"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "ClaimStatus": {
        "type": "string",
        "enum": [
          "pending",
          "approved",
          "rejected",
          "claimed"
        ]
      },
      "CreatePolicyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Comprehensive Health Coverage"
          },
          "category": {
            "type": "string",
            "example": "health"
          },
          "provider": {
            "type": "string",
            "example": "HealthSecure"
          },
          "coverage": {
            "type": "number",
            "example": 100000
          },
          "durationDays": {
            "type": "number",
            "example": 365
          },
          "premium": {
            "type": "string",
            "example": "0.8 ETH/month"
          },
          "rating": {
            "type": "number",
            "example": 0
          },
          "description": {
            "type": "string",
            "example": "Complete healthcare coverage with blockchain-verified claims processing"
          },
          "claimTypes": {
            "example": [
              "Emergency Care",
              "Prescription Drugs",
              "Mental Health"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "files": {
            "description": "Files to upload for the policy",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        },
        "required": [
          "name",
          "category",
          "provider",
          "coverage",
          "durationDays",
          "premium",
          "rating",
          "claimTypes"
        ]
      },
      "PolicyDocumentResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "policy_id": {
            "type": "number"
          },
          "signedUrl": {
            "type": "string",
            "description": "Signed Supabase URL for accessing this document"
          }
        },
        "required": [
          "id",
          "name",
          "policy_id",
          "signedUrl"
        ]
      },
      "PolicyResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "coverage": {
            "type": "number"
          },
          "duration_days": {
            "type": "number"
          },
          "premium": {
            "type": "string"
          },
          "rating": {
            "type": "number"
          },
          "popular": {
            "type": "boolean"
          },
          "description": {
            "type": "object"
          },
          "claim_types": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "policy_documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PolicyDocumentResponseDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "category",
          "provider",
          "coverage",
          "duration_days",
          "premium",
          "rating",
          "popular",
          "claim_types",
          "policy_documents"
        ]
      },
      "UpdatePolicyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Comprehensive Health Coverage"
          },
          "category": {
            "type": "string",
            "example": "health"
          },
          "provider": {
            "type": "string",
            "example": "HealthSecure"
          },
          "coverage": {
            "type": "number",
            "example": 100000
          },
          "durationDays": {
            "type": "number",
            "example": 365
          },
          "premium": {
            "type": "string",
            "example": "0.8 ETH/month"
          },
          "rating": {
            "type": "number",
            "example": 0
          },
          "description": {
            "type": "string",
            "example": "Complete healthcare coverage with blockchain-verified claims processing"
          },
          "claimTypes": {
            "example": [
              "Emergency Care",
              "Prescription Drugs",
              "Mental Health"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "files": {
            "description": "Files to upload for the policy",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "CreateCoverageDto": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the policy this coverage is linked to"
          },
          "user_id": {
            "type": "string",
            "example": "a3e1f2b4-1234-4c56-8e7d-123456789abc",
            "description": "UUID of the user who owns this coverage"
          },
          "status": {
            "type": "string",
            "example": "active",
            "description": "Status of the coverage"
          },
          "utilization_rate": {
            "type": "number",
            "example": 0,
            "description": "Utilization rate of the coverage"
          },
          "start_date": {
            "type": "string",
            "example": "2025-07-01",
            "description": "Start date of the coverage (YYYY-MM-DD)"
          },
          "end_date": {
            "type": "string",
            "example": "2026-07-01",
            "description": "End date of the coverage (YYYY-MM-DD)"
          },
          "next_payment_date": {
            "type": "string",
            "example": "2025-08-01",
            "description": "Next payment date for the coverage (YYYY-MM-DD)"
          }
        },
        "required": [
          "policy_id",
          "user_id",
          "status",
          "utilization_rate",
          "start_date",
          "end_date",
          "next_payment_date"
        ]
      },
      "CoveragePolicyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "object"
          },
          "category": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "category"
        ]
      },
      "CoverageResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "policy_id": {
            "type": "object"
          },
          "user_id": {
            "type": "object"
          },
          "status": {
            "type": "object"
          },
          "utilization_rate": {
            "type": "number"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "next_payment_date": {
            "type": "string"
          },
          "policies": {
            "$ref": "#/components/schemas/CoveragePolicyDto"
          }
        },
        "required": [
          "id",
          "utilization_rate",
          "start_date",
          "end_date",
          "next_payment_date",
          "policies"
        ]
      },
      "UpdateCoverageDto": {
        "type": "object",
        "properties": {
          "policy_id": {
            "type": "number",
            "example": 1,
            "description": "ID of the policy this coverage is linked to"
          },
          "user_id": {
            "type": "string",
            "example": "a3e1f2b4-1234-4c56-8e7d-123456789abc",
            "description": "UUID of the user who owns this coverage"
          },
          "status": {
            "type": "string",
            "example": "active",
            "description": "Status of the coverage"
          },
          "utilization_rate": {
            "type": "number",
            "example": 0,
            "description": "Utilization rate of the coverage"
          },
          "start_date": {
            "type": "string",
            "example": "2025-07-01",
            "description": "Start date of the coverage (YYYY-MM-DD)"
          },
          "end_date": {
            "type": "string",
            "example": "2026-07-01",
            "description": "End date of the coverage (YYYY-MM-DD)"
          },
          "next_payment_date": {
            "type": "string",
            "example": "2025-08-01",
            "description": "Next payment date for the coverage (YYYY-MM-DD)"
          }
        }
      },
      "ExtractClaimDto": {
        "type": "object",
        "properties": {
          "file": {
            "description": "Documents to upload",
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "CreateReviewDto": {
        "type": "object",
        "properties": {
          "rating": {
            "type": "number",
            "example": 5,
            "description": "Rating from 1 to 5"
          },
          "comment": {
            "type": "string",
            "example": "Great policy!"
          }
        },
        "required": [
          "rating"
        ]
      }
    }
  }
}